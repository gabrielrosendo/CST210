Gabriel MarcelinoAnimal Farm Pt.1This is my own workSource.cpp#include "Animal.cpp"#include "Horse.h"#include "Chicken.h"#include "Cow.h"#include "Barn.h"int main(){    // create object of the barn class    Barn b;    // feed animals    b.feedCows();    b.feedChickens();    b.feedHorses();    return 0;}Animal.cpp#include "Animal.h"Animal::Animal(){    this->name = "";    this->weight = 0;    this->height = 0;}Animal::Animal(string str, double weight, double height){    this->name = str;    this->weight = weight;    this->height = height;}string Animal::getName() const{    return this->name;}double Animal::getWeight() const{    return this->weight;}double Animal::getHeight() const{    return this->height;}void Animal::setName(string str){    this->name = str;}void Animal::setWeight(double dbl){    this->weight = dbl;}void Animal::setHeight(double dble){    this->height = dble;}void Animal::eat(){    cout << name << " is eating" << endl;    gainWeight();}void Animal::gainWeight(){    cout << name << " gained 4 pounds" << endl;    weight += 4;    cout << name << " now weights " << weight << endl;}Animal.h#ifndef ANIMAL_H#define ANIMAL_H#include <iostream>using namespace std;class Animal {    protected:        double weight;        string name;        double height;    private:        void gainWeight();    public:        Animal();            Animal(string, double, double);        void eat();        string getName()const;        double getWeight()const;        double getHeight()const;        void setWeight(double);        void setName(string);        void setHeight(double);};#endifCow.h#ifndef COW_H#define COW_H#include <iostream>#include "Animal.h"class Cow : public Animal {    public:        Cow() : Animal () {}        Cow(string name, double weight, double height) : Animal (name, weight, height) {}        void eat();        void gainWeight();};void Cow::eat() {    cout << getName() << " the Cow is eating" << endl;    gainWeight();}void Cow::gainWeight() {    cout << getName() << " gained 6 pounds." << endl;    weight += 6;    cout << getName() << " now weights " << getWeight() << endl;}#endifChicken.h#ifndef CHICKEN_H#define CHICKEN_H#include <iostream>#include "Animal.h"class Chicken : public Animal {    public:        Chicken() : Animal () {}        Chicken(string name, double weight, double height) : Animal (name, weight, height) {}        void eat();        void gainWeight();};void Chicken::eat() {    cout << getName() << " the Chicken is eating" << endl;    gainWeight();}void Chicken::gainWeight() {    cout << getName() << " gained 0.25 pounds." << endl;    weight += 0.25;    cout << getName() << " now weights " << getWeight() << endl;}#endifHorse.h#ifndef HORSE_H#define HORSE_H#include <iostream>#include "Animal.h"class Horse : public Animal {    public:        Horse() : Animal () {}        Horse(string name, double weight, double height) : Animal (name, weight, height) {}        void eat();        void gainWeight();};void Horse::eat() {    cout << getName() << " the Horse is eating" << endl;    gainWeight();}void Horse::gainWeight() {    cout << getName() << " gained 4 pounds." << endl;    weight += 4;    cout << getName() << " now weights " << getWeight() << endl;}#endifBarn.h#ifndef BARN_H#define BARN_H#include <iostream>#include <vector>#include "Animal.h"#include "Chicken.h"#include "Horse.h"#include "Cow.h"class Barn{private:    vector<Chicken> coop;    vector<Horse> stalls;    vector<Cow> pen;    int numAnimals;public:    Barn();    void feedChickens();    void feedHorses();    void feedCows();};Barn::Barn(){    // create objects of class horse    Horse harry("Harry", 1700, 4);    Horse tom("Tom", 1600, 3.5);    Horse alex("Alex", 1450, 3);    stalls.push_back(harry);    stalls.push_back(tom);    stalls.push_back(alex);    // create objects of class chicken    Chicken prissy("Prissy", 12, 1);    Chicken lucille("Lucille", 14, 1);    Chicken yetta("Yetta", 8, 1);    Chicken louise("Louise", 9, 1);    coop.push_back(prissy);    coop.push_back(lucille);    coop.push_back(yetta);    coop.push_back(louise);    // create objects of class cow    Cow betsy("Betsy", 2200, 4);    Cow dixie("Dixie", 2200, 4);    pen.push_back(betsy);    pen.push_back(dixie);}void Barn::feedCows(){    cout << "Feeding the cows" << endl;    // loop through all cows in pen    for (int i = 0; i < pen.size(); i++)    {        pen[i].eat();        cout << "\n";    }}void Barn::feedChickens(){    cout << "Feeding the chickens" << endl;    // loop through all chickens in coop    for (int i = 0; i < coop.size(); i++)    {        coop[i].eat();        cout << "\n";    }}void Barn::feedHorses(){    cout << "Feeding the horses" << endl;    // loop through all horses in stall    for (int i = 0; i < stalls.size(); i++)    {        stalls[i].eat();        cout << "\n";    }}#endif